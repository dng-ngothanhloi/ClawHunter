# Render.com Deployment Configuration - M6 DevOps Testing
# Claw Hunters GameFi Revenue Sharing System
# Optimized for Free Tier Testing Deployment

services:
  # PostgreSQL Database (Free Tier)
  - type: pserv
    name: clawhunters-db
    env: docker
    dockerfilePath: ./db/Dockerfile
    plan: free
    envVars:
      - key: POSTGRES_DB
        value: clawhunters
      - key: POSTGRES_USER
        value: clawhunters
      - key: POSTGRES_PASSWORD
        generateValue: true
    healthCheckPath: /health

  # REST API Service (M4) - Web Service with HTTP Jobs
  - type: web
    name: clawhunters-api
    env: node
    plan: free
    buildCommand: pnpm -C services/api install && pnpm -C services/api build
    startCommand: pnpm -C services/api render-start
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: clawhunters-db
          property: connectionString
      - key: SHADOW_DATABASE_URL
        fromDatabase:
          name: clawhunters-db
          property: connectionString
      - key: PORT
        value: 4000
      - key: ADL_RPC_URL
        value: https://devnet.adilchain-rpc.io
      - key: ADL_EXPLORER_URL
        value: https://devnet.adilchain-scan.io
      - key: CHAIN_ID
        value: 123456
      - key: JWT_SECRET
        generateValue: true
      - key: CORS_ORIGIN
        fromService:
          type: web
          name: clawhunters-web
          property: host
    healthCheckPath: /api/health
    autoDeploy: true

  # Web Frontend (M5) - Static Site
  - type: static
    name: clawhunters-web
    buildCommand: pnpm -C apps/web install && pnpm -C apps/web build
    staticPublishPath: apps/web/dist
    envVars:
      - key: VITE_API_BASE
        fromService:
          type: web
          name: clawhunters-api
          property: host
      - key: VITE_NETWORK_NAME
        value: AdilChain Devnet
      - key: VITE_RPC_URL
        value: https://devnet.adilchain-rpc.io
      - key: VITE_EXPLORER_URL
        value: https://devnet.adilchain-scan.io
      - key: VITE_CHAIN_ID
        value: 123456
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    autoDeploy: true

# PostgreSQL Database Configuration
databases:
  - name: clawhunters-db
    databaseName: clawhunters
    user: clawhunters
    plan: free

# Environment Groups for easier management
envVarGroups:
  - name: blockchain
    envVars:
      - key: ADL_RPC_URL
        value: https://devnet.adilchain-rpc.io
      - key: ADL_EXPLORER_URL
        value: https://devnet.adilchain-scan.io
      - key: CHAIN_ID
        value: 123456

  - name: security
    envVars:
      - key: JWT_SECRET
        generateValue: true
      - key: SESSION_SECRET
        generateValue: true

# Deployment Hooks
preDeployCommand: |
  echo "üöÄ Starting Claw Hunters M6 Testing Deployment..."
  echo "üìã Verifying PostgreSQL configuration..."
  echo "üîó Checking API service configuration..."
  echo "‚úÖ Pre-deployment checks complete"

postDeployCommand: |
  echo "üéâ Deployment complete!"
  echo "üè• Running health checks..."
  echo "üìä API Health: $RENDER_EXTERNAL_URL/api/health"
  echo "üåê Web Frontend: $RENDER_EXTERNAL_URL"
  echo "‚úÖ M6 Testing deployment successful!"

# External Cron Configuration Instructions
# Configure external cron service (cron-job.org or UptimeRobot) to call:
# POST https://clawhunters-api.onrender.com/jobs/index
# Frequency: Every 5 minutes
# Expected Response: {"status":"success","processed":N,"duration":"Xs"}

# Testing Deployment Notes:
# 1. Free tier limitations:
#    - Services may sleep after 15 minutes of inactivity
#    - Cold start time: ~30 seconds
#    - Database: 1GB storage limit
#
# 2. External cron integration:
#    - Use cron-job.org or UptimeRobot
#    - Call /jobs/index endpoint every 5 minutes
#    - Monitor logs for processing status
#
# 3. Health monitoring:
#    - API health: /api/health
#    - Web status: Static site availability
#    - Database: Connection status
#
# 4. Rollback procedure:
#    - Disable external cron jobs
#    - Revert to previous deployment
#    - Verify health endpoints